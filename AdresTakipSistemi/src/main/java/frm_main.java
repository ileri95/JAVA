
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author mustafasamil.ileri
 */
public class frm_main extends javax.swing.JFrame {

    
    ArrayList<String> selected = new ArrayList<>();//secilen nesneleri eklemek için ArrayList yazıyoruz.

    /**
     * Creates new form frm_main
     */
    public frm_main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_person_allData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        JFiledState = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_person_surname = new javax.swing.JTextField();
        txt_person_country = new javax.swing.JTextField();
        txt_person_city = new javax.swing.JTextField();
        txt_person_ptzpCode = new javax.swing.JTextField();
        txt_person_state = new javax.swing.JTextField();
        txt_person_address = new javax.swing.JTextField();
        txt_person_name = new javax.swing.JTextField();
        cmbx_categoriy = new javax.swing.JComboBox<>();
        btn_add = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        label_errorMsg = new javax.swing.JLabel();
        txt_addNewCategoriy = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_addItem = new javax.swing.JButton();
        spnr_months = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        spnr_day = new javax.swing.JSpinner();
        spnr_year = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_checkName = new javax.swing.JTextField();
        txt_checkSurname = new javax.swing.JTextField();
        checkBox_country = new javax.swing.JCheckBox();
        checkBox_city = new javax.swing.JCheckBox();
        checkBox_state = new javax.swing.JCheckBox();
        checkBox_categoriy = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btn_chkit = new javax.swing.JButton();
        btn_remove = new javax.swing.JButton();
        checkBox_zpcode = new javax.swing.JCheckBox();
        labelErrorName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPane2.setBackground(new java.awt.Color(0, 204, 204));
        jTabbedPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane2.setToolTipText(" Main");

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(0, 204, 204));
        jPanel5.setMaximumSize(new java.awt.Dimension(1220, 607));
        jPanel5.setMinimumSize(new java.awt.Dimension(1220, 607));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Name :");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Surname  : ");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 125, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Categoriy  : ");
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 128, -1, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel8.setText("Counrty : ");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 71, 63, -1));

        tabel_person_allData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Surname", "Counrty", "City", "District/City/State", "Postal/Zip Code", "Address", "Categoriy", "Day", "Month", "Year"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel_person_allData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_person_allDataMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabel_person_allDataMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tabel_person_allData);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 1070, 287));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("City : ");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 126, 57, -1));

        JFiledState.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        JFiledState.setText("District/County/State :");
        jPanel5.add(JFiledState, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 71, 161, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Postal /Zip Code     :");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 126, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel9.setText("Address   :");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 71, 69, -1));
        jPanel5.add(txt_person_surname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 123, 120, 29));
        jPanel5.add(txt_person_country, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 66, 120, 34));
        jPanel5.add(txt_person_city, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 119, 120, 37));
        jPanel5.add(txt_person_ptzpCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 119, 120, 37));
        jPanel5.add(txt_person_state, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 66, 120, 34));
        jPanel5.add(txt_person_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 64, 195, 37));
        jPanel5.add(txt_person_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 67, 120, 31));

        cmbx_categoriy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Home", "Work", "Gym" }));
        cmbx_categoriy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(cmbx_categoriy, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 119, 195, 37));

        btn_add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_add.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-add-34.png")); // NOI18N
        btn_add.setText("Add ");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        jPanel5.add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, -1, 39));

        btn_clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_clear.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-empty-trash-30.png")); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        jPanel5.add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 260, -1, -1));

        btn_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_update.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-update-30.png")); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        jPanel5.add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 260, -1, -1));

        label_errorMsg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label_errorMsg.setForeground(new java.awt.Color(204, 0, 0));
        jPanel5.add(label_errorMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 440, 30));

        txt_addNewCategoriy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_addNewCategoriyActionPerformed(evt);
            }
        });
        jPanel5.add(txt_addNewCategoriy, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 190, 200, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("New Categoriy : ");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 190, -1, 20));

        btn_addItem.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-add-30.png")); // NOI18N
        btn_addItem.setText("New Categoriy");
        btn_addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addItemActionPerformed(evt);
            }
        });
        jPanel5.add(btn_addItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 260, 150, 40));

        spnr_months.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spnr_months.setModel(new javax.swing.SpinnerListModel(new String[] {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"}));
        jPanel5.add(spnr_months, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 110, 30));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel12.setText("Months : ");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, -1, -1));

        spnr_day.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spnr_day.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        jPanel5.add(spnr_day, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, 30));

        spnr_year.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spnr_year.setModel(new javax.swing.SpinnerNumberModel(1900, 1900, 2100, 1));
        jPanel5.add(spnr_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, -1, 30));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel13.setText("Day : ");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel14.setText("Year :");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-fire-exit-30.png")); // NOI18N
        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 260, -1, -1));

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 1120, -1));

        jTabbedPane2.addTab("Person Register Page", jPanel4);

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel4.setText("Who are you looking at?");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 450, 70));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Name : ");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 82, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setText("Surname : ");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 101, -1));
        jPanel3.add(txt_checkName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 137, 30));
        jPanel3.add(txt_checkSurname, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 133, 30));

        checkBox_country.setBackground(new java.awt.Color(0, 204, 204));
        checkBox_country.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkBox_country.setText("Country");
        jPanel3.add(checkBox_country, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 100, 30));

        checkBox_city.setBackground(new java.awt.Color(0, 204, 204));
        checkBox_city.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkBox_city.setText("City ");
        checkBox_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBox_cityActionPerformed(evt);
            }
        });
        jPanel3.add(checkBox_city, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 70, 28));

        checkBox_state.setBackground(new java.awt.Color(0, 204, 204));
        checkBox_state.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkBox_state.setText("State");
        jPanel3.add(checkBox_state, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 106, -1));

        checkBox_categoriy.setBackground(new java.awt.Color(0, 204, 204));
        checkBox_categoriy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkBox_categoriy.setText("Categoriy");
        jPanel3.add(checkBox_categoriy, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 90, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 362, 629, 243));

        btn_chkit.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btn_chkit.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-microsoft-todo-2019-30.png")); // NOI18N
        btn_chkit.setText("Chech-it");
        btn_chkit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chkitActionPerformed(evt);
            }
        });
        jPanel3.add(btn_chkit, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, -1, -1));

        btn_remove.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btn_remove.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-empty-trash-30.png")); // NOI18N
        btn_remove.setText("Remove");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });
        jPanel3.add(btn_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 310, -1, -1));

        checkBox_zpcode.setBackground(new java.awt.Color(0, 204, 204));
        checkBox_zpcode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        checkBox_zpcode.setText("Zip Code");
        jPanel3.add(checkBox_zpcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, -1, -1));

        labelErrorName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel3.add(labelErrorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 260, 440, 20));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\mustafasamil.ileri\\Documents\\NetBeansProjects\\AdresTakipSistemi\\icons\\icons8-fire-exit-30.png")); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 310, -1, -1));

        jTabbedPane2.addTab("Person Check Address", jPanel3);

        getContentPane().add(jTabbedPane2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        
            
        
            label_errorMsg.setText("");//Panelin boş alanın iligli hata mesajı için tanımlıyoruz
            
            DefaultTableModel personData = (DefaultTableModel) tabel_person_allData.getModel();//Jtable öğe eklemek için obje üretiyoruz
            
            if (txt_person_address.getText().trim().equals("")) { //adresin boş olup olmadığını kontrol ediyoruz
                label_errorMsg.setText(" Adrress can't be empty !!!");//adres boş ise iligli mesajı yazdırıyoruz

            } else {
                    //Jtable textField gelen değerleri eklemek için object listi açıyoruz
                Object[] addes = {txt_person_name.getText(),
                    txt_person_surname.getText(),
                    txt_person_country.getText(),
                    txt_person_city.getText(),
                    txt_person_state.getText(),
                    txt_person_ptzpCode.getText(),
                    txt_person_address.getText(),
                    cmbx_categoriy.getSelectedItem().toString(),
                    spnr_day.getValue(),
                    spnr_months.getValue().toString(),
                    spnr_year.getValue().toString()
                
                
                };
                    
                   
                    
                    
                personData.addRow(addes);// değişkenleri Table ekliyouruz
                
                
                 //Tabledaki değerleri değişkenlere atıyoruz
            String name = txt_person_name.getText();
            String surname = txt_person_surname.getText();
            String counrty = txt_person_country.getText();
            String city = txt_person_city.getText();
            String state = txt_person_state.getText();
            int ptzpcode = Integer.parseInt(txt_person_ptzpCode.getText());
            String address = txt_person_address.getText();
            String categoriy = cmbx_categoriy.getSelectedItem().toString();

            Person person = new Person(name, surname, counrty, city, state, ptzpcode, address, categoriy);
            //ilgili değişkenleri oluşturuduğumuz obje encapsulation ile ekliotruz
            //person = new Person(name, surname, counrty, city, state, ptzpcode, address, categoriy);
            boolean addPersonYes = DataManage.AddPerson(person);//Person objesini dataManage Sınıfa ekliyoruz

            if (addPersonYes) {//ekleme yapıldı mı diye kontrol ediyoruz
                JOptionPane.showMessageDialog(rootPane, "add was succeced");//ekleme başarlı ise başarlı mesajı panelini yazdırıyoruz
            } else {
                JOptionPane.showMessageDialog(rootPane, "Something was wrong", "Add", JOptionPane.ERROR_MESSAGE);//ekleme başarlı değil ise başarısız mesajı panelini yazdırıyoruz
            }
                
                
            }
                
           

        


    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:

        label_errorMsg.setText("");//iligli hata mesajını vermek için 

        DefaultTableModel personData = (DefaultTableModel) tabel_person_allData.getModel();//tabledaki değerleri getiriyoruz

        int selectedRow = tabel_person_allData.getSelectedRow();//secilen row

        if (selectedRow == -1) { // secilen row için konrol yapiyoruz
            if (tabel_person_allData.getRowCount() == 0) {
                label_errorMsg.setText("Tabel is Empty !");//secilen row'da değer boş olmaması gerektiğini mesajını veriyoruz
            } else {
                label_errorMsg.setText("Please selecet ");//secildiği için mesaj veriyoruz
            }
        } else {
            
            //secilen yerdeki değerleri girilen değer ile değiştiriyoruz
            personData.setValueAt(txt_person_name.getText(), selectedRow, 0);
            personData.setValueAt(txt_person_surname.getText(), selectedRow, 1);
            personData.setValueAt(txt_person_country.getText(), selectedRow, 2);
            personData.setValueAt(txt_person_city.getText(), selectedRow, 3);
            personData.setValueAt(txt_person_state.getText(), selectedRow, 4);
            personData.setValueAt(txt_person_ptzpCode.getText(), selectedRow, 5);
            personData.setValueAt(txt_person_address.getText(), selectedRow, 6);
            personData.setValueAt(cmbx_categoriy.getSelectedItem().toString(), selectedRow, 7);
            personData.setValueAt(spnr_day.getValue().toString(), selectedRow, 8);
            personData.setValueAt(spnr_months.getValue().toString(), selectedRow, 9);
            personData.setValueAt(spnr_year.getValue().toString(), selectedRow, 10);

            
        }
        DataManage.persons.clear();
        
         String name = txt_person_name.getText();
            String surname = txt_person_surname.getText();
            String counrty = txt_person_country.getText();
            String city = txt_person_city.getText();
            String state = txt_person_state.getText();
            int ptzpcode = Integer.parseInt(txt_person_ptzpCode.getText());
            String address = txt_person_address.getText();
            String categoriy = cmbx_categoriy.getSelectedItem().toString();

            Person person = new Person(name, surname, counrty, city, state, ptzpcode, address, categoriy);
            //ilgili değişkenleri oluşturuduğumuz obje encapsulation ile ekliotruz
            //person = new Person(name, surname, counrty, city, state, ptzpcode, address, categoriy);
            boolean addPersonYes = DataManage.AddPerson(person);//Person objesini dataManage Sınıfa ekliyoruz

            if (addPersonYes) {//ekleme yapıldı mı diye kontrol ediyoruz
                JOptionPane.showMessageDialog(rootPane, "updare was succeced");//ekleme başarlı ise başarlı mesajı panelini yazdırıyoruz
            } else {
                JOptionPane.showMessageDialog(rootPane, "Something was wrong", "Add", JOptionPane.ERROR_MESSAGE);//ekleme başarlı değil ise başarısız mesajı panelini yazdırıyoruz
            }

        
        
        
    }//GEN-LAST:event_btn_updateActionPerformed

    private void tabel_person_allDataMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_person_allDataMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tabel_person_allDataMouseEntered

    private void tabel_person_allDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_person_allDataMouseClicked
        // TODO add your handling code here:
        
        //farenin tıkladığı yerdeki değerleri görmek için 
        
        DefaultTableModel personData = (DefaultTableModel) tabel_person_allData.getModel();//tablodaki değerleri alıyoruz

        int selectedRow = tabel_person_allData.getSelectedRow();

        txt_person_name.setText(personData.getValueAt(selectedRow, 0).toString());
        txt_person_surname.setText(personData.getValueAt(selectedRow, 1).toString());
        txt_person_country.setText(personData.getValueAt(selectedRow, 2).toString());
        txt_person_city.setText(personData.getValueAt(selectedRow, 3).toString());
        txt_person_state.setText(personData.getValueAt(selectedRow, 4).toString());
        txt_person_ptzpCode.setText(personData.getValueAt(selectedRow, 5).toString());
        txt_person_address.setText(personData.getValueAt(selectedRow, 6).toString());
        cmbx_categoriy.setSelectedItem(personData.getValueAt(selectedRow, 7).toString());
        

    }//GEN-LAST:event_tabel_person_allDataMouseClicked

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO add your handling code here:
        label_errorMsg.setText("");//iligli hata mesajının vermek için
        DefaultTableModel personData = (DefaultTableModel) tabel_person_allData.getModel();//tablodaki değerleri getiriyoruz

        int selectedRow = tabel_person_allData.getSelectedRow();

        if (selectedRow == -1) {
            if (tabel_person_allData.getRowCount() == 0) {
                label_errorMsg.setText("Person Data Table is Empty");//secilen yerde boş olduğunun mesajını veriyoruz

            } else {
                label_errorMsg.setText("please Selecete one Item");//öğe seçmesi için mesaj veriyoruz
            }

        } else {
            personData.removeRow(selectedRow);//secilen ogeyi siliyoruz

            label_errorMsg.setText(" Item was cleared !!! ");//silinen öğe için sildindi mesajı 
            
            DataManage.persons.clear();
            
        }

    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addItemActionPerformed
        // TODO add your handling code here:

        String addValue = txt_addNewCategoriy.getText();//iligli mesajı vermek için
        
        if(addValue.equals("")){//girilen kategori değeri boş mu diye kontrol ediyoruz
            JOptionPane.showMessageDialog(rootPane, "Categoiry is empty");// boş değer için hata mesajı
            
        }else{
            cmbx_categoriy.addItem(addValue);//kategoriye boş ise değeri ekliyoruz
        }
        
    }//GEN-LAST:event_btn_addItemActionPerformed

    private void txt_addNewCategoriyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_addNewCategoriyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_addNewCategoriyActionPerformed

    private void checkBox_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBox_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBox_cityActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        // TODO add your handling code here:
        selected.removeAll(selected);//secilen objeyi siliyoruz
        jTextArea1.setText("");

    }//GEN-LAST:event_btn_removeActionPerformed

    private void btn_chkitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chkitActionPerformed
        // TODO add your handling code here:
        
        labelErrorName.setText("");//iligli hata mesajı vermek için
        String searchName = txt_checkName.getText();
        String searchSurame = txt_checkSurname.getText();

        if(searchName.equals("")){// boş mu diye kontrol ediyoruz
            JOptionPane.showMessageDialog(rootPane, "Name was not empty");//boş ise ilgili hata mesajını yayınlıyoruz
        }
        for (Person p : DataManage.persons) {//for each ile person dolaşıyoruz

            if (p.getName().compareTo(searchName) == 0) {//girilen ad ile eşleşiyormu kontrol ediyoruz
                
                
                if (checkBox_country.isSelected()) {
                    selected.add(p.getCountry());//secilen iligli combobox değerini Arrayliste Ekliyoruz

                } else {
                    selected.remove(p.getCountry());//secilmeyen  iligli combobox değerini Arrayliste Siliyoruz
                }

                if (checkBox_city.isSelected()) {
                    selected.add(p.getCity());//secilen iligli combobox değerini Arrayliste Ekliyoruz

                } else {
                    selected.remove(p.getCity());//secilmeyen  iligli combobox değerini Arrayliste Siliyoruz
                }

                if (checkBox_state.isSelected()) {

                    selected.add(p.getState());//secilen iligli combobox değerini Arrayliste Ekliyoruz
                } else {
                    selected.remove(p.getState());//secilmeyen  iligli combobox değerini Arrayliste Siliyoruz
                }

                if (checkBox_categoriy.isSelected()) {

                    selected.add(p.getCategoriy());//secilen iligli combobox değerini Arrayliste Ekliyoruz
                } else {
                    selected.remove(p.getCategoriy());//secilmeyen  iligli combobox değerini Arrayliste Siliyoruz
                }
                
                if (checkBox_zpcode.isSelected()) {
                   
                    selected.add(String.valueOf(p.getPtzpcode()));//secilen iligli combobox değerini Arrayliste Ekliyoruz
                } else {
                    selected.remove(String.valueOf(p.getPtzpcode()));//secilmeyen  iligli combobox değerini Arrayliste Siliyoruz
                }
            }

        }

        String writeName = searchName + " " + searchSurame+" ";//girilen isim ve soy ismi birleştiriyoruz
        
        for (String string : selected) {
            writeName += string + " ";//seccilen ifadeler ile JtextArea iligli mesajı yazıyoruz
        }

        jTextArea1.setText(writeName+" ");//seccilen ifadeler ile JtextArea iligli mesajı yayınlıyoruz
        selected.removeAll(selected);//ve sıfırlıyoruz


    }//GEN-LAST:event_btn_chkitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         int input=JOptionPane.showConfirmDialog(rootPane, "Do you want to exit ? ", "Exit", JOptionPane.YES_NO_OPTION);// çıkış işlemi için uyarı veriliyor
         if(input==0){//evet ise sistem kapatılıyor
             System.exit(0);
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int input=JOptionPane.showConfirmDialog(rootPane, "Do you want to exit ? ", "Exit", JOptionPane.YES_NO_OPTION);// çıkış işlemi için uyarı veriliyor
         if(input==0){//evet ise sistem kapatılıyor, 0=yes,1=no
             System.exit(0);
         }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frm_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frm_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frm_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frm_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frm_main().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JFiledState;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_addItem;
    private javax.swing.JButton btn_chkit;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_remove;
    private javax.swing.JButton btn_update;
    private javax.swing.JCheckBox checkBox_categoriy;
    private javax.swing.JCheckBox checkBox_city;
    private javax.swing.JCheckBox checkBox_country;
    private javax.swing.JCheckBox checkBox_state;
    private javax.swing.JCheckBox checkBox_zpcode;
    private javax.swing.JComboBox<String> cmbx_categoriy;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelErrorName;
    private javax.swing.JLabel label_errorMsg;
    private javax.swing.JSpinner spnr_day;
    private javax.swing.JSpinner spnr_months;
    private javax.swing.JSpinner spnr_year;
    private javax.swing.JTable tabel_person_allData;
    private javax.swing.JTextField txt_addNewCategoriy;
    private javax.swing.JTextField txt_checkName;
    private javax.swing.JTextField txt_checkSurname;
    private javax.swing.JTextField txt_person_address;
    private javax.swing.JTextField txt_person_city;
    private javax.swing.JTextField txt_person_country;
    private javax.swing.JTextField txt_person_name;
    private javax.swing.JTextField txt_person_ptzpCode;
    private javax.swing.JTextField txt_person_state;
    private javax.swing.JTextField txt_person_surname;
    // End of variables declaration//GEN-END:variables
}
